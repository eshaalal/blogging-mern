import {
  require_react_is
} from "./chunk-27IYXUL3.js";
import {
  _extends,
  init_extends
} from "./chunk-QEVPBDFN.js";
import {
  require_object_assign,
  require_react
} from "./chunk-RYO6GA3P.js";
import {
  __commonJS,
  __toModule
} from "./chunk-A5ICIBVI.js";

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = Function.call.bind(Object.prototype.hasOwnProperty);
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x4) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.");
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).");
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning("Failed " + location + " type: " + error.message + (stack != null ? stack : ""));
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var checkPropTypes = require_checkPropTypes();
    var has = Function.call.bind(Object.prototype.hasOwnProperty);
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x4) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement2, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x4, y4) {
        if (x4 === y4) {
          return x4 !== 0 || 1 / x4 === 1 / y4;
        } else {
          return x4 !== x4 && y4 !== y4;
        }
      }
      function PropTypeError(message) {
        this.message = message;
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.");
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement2(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning("Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).");
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + ".");
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            if (checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
              return null;
            }
          }
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (!checker) {
              continue;
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (!checker) {
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement2(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/history/index.js
init_extends();
var m;
var x = m || (m = {});
x.Pop = "POP";
x.Push = "PUSH";
x.Replace = "REPLACE";
var y = true ? function(a) {
  return Object.freeze(a);
} : function(a) {
  return a;
};
function z(a, b) {
  if (!a) {
    typeof console !== "undefined" && console.warn(b);
    try {
      throw Error(b);
    } catch (g) {
    }
  }
}
function A(a) {
  a.preventDefault();
  a.returnValue = "";
}
function B() {
  var a = [];
  return { get length() {
    return a.length;
  }, push: function(b) {
    a.push(b);
    return function() {
      a = a.filter(function(a2) {
        return a2 !== b;
      });
    };
  }, call: function(b) {
    a.forEach(function(a2) {
      return a2 && a2(b);
    });
  } };
}
function D() {
  return Math.random().toString(36).substr(2, 8);
}
function E(a) {
  var b = a.pathname, g = a.search;
  a = a.hash;
  return (b === void 0 ? "/" : b) + (g === void 0 ? "" : g) + (a === void 0 ? "" : a);
}
function F(a) {
  var b = {};
  if (a) {
    var g = a.indexOf("#");
    0 <= g && (b.hash = a.substr(g), a = a.substr(0, g));
    g = a.indexOf("?");
    0 <= g && (b.search = a.substr(g), a = a.substr(0, g));
    a && (b.pathname = a);
  }
  return b;
}
function createBrowserHistory(a) {
  function b() {
    var a2 = h.location, d = f2.state || {};
    return [d.idx, y({ pathname: a2.pathname, search: a2.search, hash: a2.hash, state: d.usr || null, key: d.key || "default" })];
  }
  function g(a2) {
    return typeof a2 === "string" ? a2 : E(a2);
  }
  function t2(a2, d) {
    d === void 0 && (d = null);
    return y(_extends({}, l2, {}, typeof a2 === "string" ? F(a2) : a2, { state: d, key: D() }));
  }
  function v3(a2) {
    n2 = a2;
    a2 = b();
    q3 = a2[0];
    l2 = a2[1];
    c.call({ action: n2, location: l2 });
  }
  function w3(a2, d) {
    function c2() {
      w3(a2, d);
    }
    var k2 = m.Push, C3 = t2(a2, d);
    if (!e.length || (e.call({
      action: k2,
      location: C3,
      retry: c2
    }), false)) {
      var b2 = [{ usr: C3.state, key: C3.key, idx: q3 + 1 }, g(C3)];
      C3 = b2[0];
      b2 = b2[1];
      try {
        f2.pushState(C3, "", b2);
      } catch (G2) {
        h.location.assign(b2);
      }
      v3(k2);
    }
  }
  function u(a2, d) {
    function c2() {
      u(a2, d);
    }
    var b2 = m.Replace, k2 = t2(a2, d);
    e.length && (e.call({ action: b2, location: k2, retry: c2 }), 1) || (k2 = [{ usr: k2.state, key: k2.key, idx: q3 }, g(k2)], f2.replaceState(k2[0], "", k2[1]), v3(b2));
  }
  function r3(a2) {
    f2.go(a2);
  }
  a === void 0 && (a = {});
  a = a.window;
  var h = a === void 0 ? document.defaultView : a, f2 = h.history, p3 = null;
  h.addEventListener("popstate", function() {
    if (p3)
      e.call(p3), p3 = null;
    else {
      var a2 = m.Pop, d = b(), c2 = d[0];
      d = d[1];
      if (e.length)
        if (c2 != null) {
          var f3 = q3 - c2;
          f3 && (p3 = { action: a2, location: d, retry: function() {
            r3(-1 * f3);
          } }, r3(f3));
        } else
          true ? z(false, "You are trying to block a POP navigation to a location that was not created by the history library. The block will fail silently in production, but in general you should do all navigation with the history library (instead of using window.history.pushState directly) to avoid this situation.") : void 0;
      else
        v3(a2);
    }
  });
  var n2 = m.Pop;
  a = b();
  var q3 = a[0], l2 = a[1], c = B(), e = B();
  q3 == null && (q3 = 0, f2.replaceState(_extends({}, f2.state, { idx: q3 }), ""));
  return { get action() {
    return n2;
  }, get location() {
    return l2;
  }, createHref: g, push: w3, replace: u, go: r3, back: function() {
    r3(-1);
  }, forward: function() {
    r3(1);
  }, listen: function(a2) {
    return c.push(a2);
  }, block: function(a2) {
    var d = e.push(a2);
    e.length === 1 && h.addEventListener("beforeunload", A);
    return function() {
      d();
      e.length || h.removeEventListener("beforeunload", A);
    };
  } };
}
function createHashHistory(a) {
  function b() {
    var a2 = F(f2.location.hash.substr(1)), c2 = a2.pathname, b2 = a2.search;
    a2 = a2.hash;
    var e2 = p3.state || {};
    return [e2.idx, y({ pathname: c2 === void 0 ? "/" : c2, search: b2 === void 0 ? "" : b2, hash: a2 === void 0 ? "" : a2, state: e2.usr || null, key: e2.key || "default" })];
  }
  function g() {
    if (n2)
      k2.call(n2), n2 = null;
    else {
      var a2 = m.Pop, c2 = b(), e2 = c2[0];
      c2 = c2[1];
      if (k2.length)
        if (e2 != null) {
          var f3 = l2 - e2;
          f3 && (n2 = { action: a2, location: c2, retry: function() {
            h(-1 * f3);
          } }, h(f3));
        } else
          true ? z(false, "You are trying to block a POP navigation to a location that was not created by the history library. The block will fail silently in production, but in general you should do all navigation with the history library (instead of using window.history.pushState directly) to avoid this situation.") : void 0;
      else
        w3(a2);
    }
  }
  function t2(a2) {
    var d = document.querySelector("base"), c2 = "";
    d && d.getAttribute("href") && (d = f2.location.href, c2 = d.indexOf("#"), c2 = c2 === -1 ? d : d.slice(0, c2));
    return c2 + "#" + (typeof a2 === "string" ? a2 : E(a2));
  }
  function v3(a2, b2) {
    b2 === void 0 && (b2 = null);
    return y(_extends({}, c, {}, typeof a2 === "string" ? F(a2) : a2, { state: b2, key: D() }));
  }
  function w3(a2) {
    q3 = a2;
    a2 = b();
    l2 = a2[0];
    c = a2[1];
    e.call({ action: q3, location: c });
  }
  function u(a2, c2) {
    function d() {
      u(a2, c2);
    }
    var b2 = m.Push, e2 = v3(a2, c2);
    true ? z(e2.pathname.charAt(0) === "/", "Relative pathnames are not supported in hash history.push(" + JSON.stringify(a2) + ")") : void 0;
    if (!k2.length || (k2.call({ action: b2, location: e2, retry: d }), false)) {
      var g2 = [{ usr: e2.state, key: e2.key, idx: l2 + 1 }, t2(e2)];
      e2 = g2[0];
      g2 = g2[1];
      try {
        p3.pushState(e2, "", g2);
      } catch (H2) {
        f2.location.assign(g2);
      }
      w3(b2);
    }
  }
  function r3(a2, c2) {
    function d() {
      r3(a2, c2);
    }
    var e2 = m.Replace, b2 = v3(a2, c2);
    true ? z(b2.pathname.charAt(0) === "/", "Relative pathnames are not supported in hash history.replace(" + JSON.stringify(a2) + ")") : void 0;
    k2.length && (k2.call({
      action: e2,
      location: b2,
      retry: d
    }), 1) || (b2 = [{ usr: b2.state, key: b2.key, idx: l2 }, t2(b2)], p3.replaceState(b2[0], "", b2[1]), w3(e2));
  }
  function h(a2) {
    p3.go(a2);
  }
  a === void 0 && (a = {});
  a = a.window;
  var f2 = a === void 0 ? document.defaultView : a, p3 = f2.history, n2 = null;
  f2.addEventListener("popstate", g);
  f2.addEventListener("hashchange", function() {
    var a2 = b()[1];
    E(a2) !== E(c) && g();
  });
  var q3 = m.Pop;
  a = b();
  var l2 = a[0], c = a[1], e = B(), k2 = B();
  l2 == null && (l2 = 0, p3.replaceState(_extends({}, p3.state, { idx: l2 }), ""));
  return {
    get action() {
      return q3;
    },
    get location() {
      return c;
    },
    createHref: t2,
    push: u,
    replace: r3,
    go: h,
    back: function() {
      h(-1);
    },
    forward: function() {
      h(1);
    },
    listen: function(a2) {
      return e.push(a2);
    },
    block: function(a2) {
      var c2 = k2.push(a2);
      k2.length === 1 && f2.addEventListener("beforeunload", A);
      return function() {
        c2();
        k2.length || f2.removeEventListener("beforeunload", A);
      };
    }
  };
}
function createMemoryHistory(a) {
  function b(a2, b2) {
    b2 === void 0 && (b2 = null);
    return y(_extends({}, n2, {}, typeof a2 === "string" ? F(a2) : a2, { state: b2, key: D() }));
  }
  function g(a2, b2, f3) {
    return !l2.length || (l2.call({ action: a2, location: b2, retry: f3 }), false);
  }
  function t2(a2, b2) {
    p3 = a2;
    n2 = b2;
    q3.call({ action: p3, location: n2 });
  }
  function v3(a2, e) {
    var c = m.Push, d = b(a2, e);
    true ? z(n2.pathname.charAt(0) === "/", "Relative pathnames are not supported in memory history.push(" + JSON.stringify(a2) + ")") : void 0;
    g(c, d, function() {
      v3(a2, e);
    }) && (f2 += 1, h.splice(f2, h.length, d), t2(c, d));
  }
  function w3(a2, e) {
    var c = m.Replace, d = b(a2, e);
    true ? z(n2.pathname.charAt(0) === "/", "Relative pathnames are not supported in memory history.replace(" + JSON.stringify(a2) + ")") : void 0;
    g(c, d, function() {
      w3(a2, e);
    }) && (h[f2] = d, t2(c, d));
  }
  function u(a2) {
    var b2 = Math.min(Math.max(f2 + a2, 0), h.length - 1), c = m.Pop, d = h[b2];
    g(c, d, function() {
      u(a2);
    }) && (f2 = b2, t2(c, d));
  }
  a === void 0 && (a = {});
  var r3 = a;
  a = r3.initialEntries;
  r3 = r3.initialIndex;
  var h = (a === void 0 ? ["/"] : a).map(function(a2) {
    var b2 = y(_extends({ pathname: "/", search: "", hash: "", state: null, key: D() }, typeof a2 === "string" ? F(a2) : a2));
    true ? z(b2.pathname.charAt(0) === "/", "Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: " + JSON.stringify(a2) + ")") : void 0;
    return b2;
  }), f2 = Math.min(Math.max(r3 == null ? h.length - 1 : r3, 0), h.length - 1), p3 = m.Pop, n2 = h[f2], q3 = B(), l2 = B();
  return { get index() {
    return f2;
  }, get action() {
    return p3;
  }, get location() {
    return n2;
  }, createHref: function(a2) {
    return typeof a2 === "string" ? a2 : E(a2);
  }, push: v3, replace: w3, go: u, back: function() {
    u(-1);
  }, forward: function() {
    u(1);
  }, listen: function(a2) {
    return q3.push(a2);
  }, block: function(a2) {
    return l2.push(a2);
  } };
}

// node_modules/react-router/index.js
var import_prop_types = __toModule(require_prop_types());
var import_react = __toModule(require_react());
function f() {
  f = Object.assign || function(a) {
    for (var b = 1; b < arguments.length; b++) {
      var c = arguments[b], d;
      for (d in c)
        Object.prototype.hasOwnProperty.call(c, d) && (a[d] = c[d]);
    }
    return a;
  };
  return f.apply(this, arguments);
}
var k = true ? function(a) {
  return Object.freeze(a);
} : function(a) {
  return a;
};
function l(a, b) {
  if (!a)
    throw Error(b);
}
function m2(a, b) {
  if (!a) {
    typeof console !== "undefined" && console.warn(b);
    try {
      throw Error(b);
    } catch (c) {
    }
  }
}
var p = {};
function q(a, b, c) {
  b || p[a] || (p[a] = true, true ? m2(false, c) : void 0);
}
var r = (0, import_react.createContext)({ static: false });
r.displayName = "Location";
var v = (0, import_react.createContext)({ outlet: null, params: k({}), pathname: "", route: null });
v.displayName = "Route";
function w(a) {
  var b = a.children, c = a.initialEntries;
  a = a.initialIndex;
  var d = (0, import_react.useRef)();
  d.current == null && (d.current = createMemoryHistory({ initialEntries: c, initialIndex: a }));
  var e = d.current;
  c = (0, import_react.useReducer)(function(a2, c2) {
    return c2;
  }, { action: e.action, location: e.location });
  a = c[0];
  var g = c[1];
  (0, import_react.useLayoutEffect)(function() {
    return e.listen(g);
  }, [e]);
  return (0, import_react.createElement)(x2, { children: b, action: a.action, location: a.location, navigator: e });
}
w.displayName = "MemoryRouter", w.propTypes = { children: import_prop_types.default.node, initialEntries: import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({ pathname: import_prop_types.default.string, search: import_prop_types.default.string, hash: import_prop_types.default.string, state: import_prop_types.default.object, key: import_prop_types.default.string })])), initialIndex: import_prop_types.default.number };
function y2(a) {
  var b = a.to, c = a.replace, d = a.state;
  z2() ? void 0 : true ? l(false, "<Navigate> may be used only in the context of a <Router> component.") : l(false);
  true ? m2(!(0, import_react.useContext)(r).static, "<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.") : void 0;
  var e = A2();
  (0, import_react.useEffect)(function() {
    e(b, {
      replace: c,
      state: d
    });
  });
  return null;
}
y2.displayName = "Navigate", y2.propTypes = { to: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({ pathname: import_prop_types.default.string, search: import_prop_types.default.string, hash: import_prop_types.default.string })]).isRequired, replace: import_prop_types.default.bool, state: import_prop_types.default.object };
function B2() {
  return C();
}
B2.displayName = "Outlet", B2.propTypes = {};
function D2(a) {
  a = a.element;
  return a === void 0 ? (0, import_react.createElement)(B2, null) : a;
}
D2.displayName = "Route", D2.propTypes = { caseSensitive: import_prop_types.default.bool, children: import_prop_types.default.node, element: import_prop_types.default.element, path: import_prop_types.default.string };
function x2(a) {
  var b = a.children;
  b = b === void 0 ? null : b;
  var c = a.action;
  c = c === void 0 ? m.Pop : c;
  var d = a.location, e = a.navigator;
  a = a.static;
  a = a === void 0 ? false : a;
  z2() ? true ? l(false, "You cannot render a <Router> inside another <Router>. You never need more than one.") : l(false) : void 0;
  return (0, import_react.createElement)(r.Provider, { children: b, value: { action: c, location: d, navigator: e, static: a } });
}
x2.displayName = "Router", x2.propTypes = { children: import_prop_types.default.node, action: import_prop_types.default.oneOf(["POP", "PUSH", "REPLACE"]), location: import_prop_types.default.object.isRequired, navigator: import_prop_types.default.shape({ createHref: import_prop_types.default.func.isRequired, push: import_prop_types.default.func.isRequired, replace: import_prop_types.default.func.isRequired, go: import_prop_types.default.func.isRequired, block: import_prop_types.default.func.isRequired }).isRequired, static: import_prop_types.default.bool };
function E2(a) {
  var b = a.basename;
  b = b === void 0 ? "" : b;
  a = F2(a.children);
  return G(a, b);
}
E2.displayName = "Routes", E2.propTypes = { basename: import_prop_types.default.string, children: import_prop_types.default.node };
function z2() {
  return (0, import_react.useContext)(r).location != null;
}
function H() {
  z2() ? void 0 : true ? l(false, "useLocation() may be used only in the context of a <Router> component.") : l(false);
  return (0, import_react.useContext)(r).location;
}
function A2() {
  z2() ? void 0 : true ? l(false, "useNavigate() may be used only in the context of a <Router> component.") : l(false);
  var a = (0, import_react.useContext)(r).navigator, b = (0, import_react.useContext)(v).pathname, c = (0, import_react.useRef)(false);
  (0, import_react.useEffect)(function() {
    c.current = true;
  });
  return (0, import_react.useCallback)(function(d, e) {
    e === void 0 && (e = {});
    c.current ? typeof d === "number" ? a.go(d) : (d = J(d, b), (e.replace ? a.replace : a.push)(d, e.state)) : true ? m2(false, "You should call navigate() in a useEffect, not when your component is first rendered.") : void 0;
  }, [a, b]);
}
function C() {
  return (0, import_react.useContext)(v).outlet;
}
function K(a) {
  var b = (0, import_react.useContext)(v).pathname;
  return (0, import_react.useMemo)(function() {
    return J(a, b);
  }, [a, b]);
}
function G(a, b) {
  b === void 0 && (b = "");
  var c = (0, import_react.useContext)(v), d = c.route, e = c.pathname, g = c.params;
  c = d && d.path, q(e, !d || d.path.endsWith("*"), 'You rendered descendant <Routes> (or called `useRoutes`) at "' + e + '" (under <Route path="' + (c + `">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="`) + (c + '"> to <Route path="' + c + '/*">.'));
  b = b ? L([e, b]) : e;
  var h = H();
  return (d = (0, import_react.useMemo)(function() {
    return M(a, h, b);
  }, [h, a, b])) ? d.reduceRight(function(a2, c2) {
    var d2 = c2.pathname, e2 = c2.route;
    return (0, import_react.createElement)(v.Provider, { children: e2.element, value: { outlet: a2, params: k(f({}, g, {}, c2.params)), pathname: L([b, d2]), route: e2 } });
  }, null) : null;
}
function N(a) {
  return a.map(function(a2) {
    var c = { path: a2.path || "/", caseSensitive: a2.caseSensitive === true, element: a2.element || (0, import_react.createElement)(B2, null) };
    a2.children && (c.children = N(a2.children));
    return c;
  });
}
function F2(a) {
  var b = [];
  import_react.Children.forEach(a, function(a2) {
    if ((0, import_react.isValidElement)(a2))
      if (a2.type === import_react.Fragment)
        b.push.apply(b, F2(a2.props.children));
      else {
        var c = { path: a2.props.path || "/", caseSensitive: a2.props.caseSensitive === true, element: a2 };
        a2.props.children && (a2 = F2(a2.props.children), a2.length && (c.children = a2));
        b.push(c);
      }
  });
  return b;
}
function M(a, b, c) {
  c === void 0 && (c = "");
  typeof b === "string" && (b = F(b));
  b = b.pathname || "/";
  if (c)
    if (c = c.replace(/^\/*/, "/").replace(/\/+$/, ""), b.startsWith(c))
      b = b === c ? "/" : b.slice(c.length);
    else
      return null;
  a = O(a);
  P(a);
  var d = null;
  for (c = 0; d == null && c < a.length; ++c)
    a: {
      d = b;
      for (var e = a[c][1], g = "/", h = {}, I = [], n2 = 0; n2 < e.length; ++n2) {
        var t2 = e[n2], u = g === "/" ? d : d.slice(g.length) || "/";
        u = Q({ path: t2.path, caseSensitive: t2.caseSensitive, end: n2 === e.length - 1 }, u);
        if (!u) {
          d = null;
          break a;
        }
        g = L([g, u.pathname]);
        h = f({}, h, {}, u.params);
        I.push({ route: t2, pathname: g, params: k(h) });
      }
      d = I;
    }
  return d;
}
function O(a, b, c, d, e) {
  b === void 0 && (b = []);
  c === void 0 && (c = "");
  d === void 0 && (d = []);
  e === void 0 && (e = []);
  a.forEach(function(a2, h) {
    var g = L([c, a2.path]), n2 = d.concat(a2);
    h = e.concat(h);
    a2.children && O(a2.children, b, g, n2, h);
    b.push([g, n2, h]);
  });
  return b;
}
function P(a) {
  var b = a.reduce(function(a2, b2) {
    b2 = b2[0];
    a2[b2] = R(b2);
    return a2;
  }, {});
  S(a, function(a2, d) {
    var c = a2[2];
    a2 = b[a2[0]];
    var g = d[2];
    d = b[d[0]];
    return a2 !== d ? d - a2 : T(c, g);
  });
}
var U = /^:\w+$/;
var V = 2;
var W = 1;
var X = 10;
var Y = -2;
function Z(a) {
  return a === "*";
}
function R(a) {
  a = a.split("/");
  var b = a.length;
  a.some(Z) && (b += Y);
  return a.filter(function(a2) {
    return !Z(a2);
  }).reduce(function(a2, b2) {
    return a2 + (U.test(b2) ? V : b2 === "" ? W : X);
  }, b);
}
function T(a, b) {
  return a.length === b.length && a.slice(0, -1).every(function(a2, d) {
    return a2 === b[d];
  }) ? a[a.length - 1] - b[b.length - 1] : 0;
}
function S(a, b) {
  var c = a.slice(0);
  a.sort(function(a2, e) {
    return b(a2, e) || c.indexOf(a2) - c.indexOf(e);
  });
}
function Q(a, b) {
  typeof a === "string" && (a = { path: a });
  var c = a;
  a = c.path;
  var d = c.caseSensitive;
  c = c.end;
  c = aa(a, d === void 0 ? false : d, c === void 0 ? true : c);
  d = c[1];
  c = b.match(c[0]);
  if (!c)
    return null;
  b = c[1];
  var e = c.slice(2);
  d = d.reduce(function(a2, b2, c2) {
    c2 = e[c2];
    try {
      var d2 = decodeURIComponent(c2.replace(/\+/g, " "));
    } catch (t2) {
      true ? m2(false, 'The value for the URL param "' + b2 + '" will not be decoded because the string "' + (c2 + '" is a malformed URL segment. This is probably due to a bad percent encoding (') + (t2 + ").")) : void 0, d2 = c2;
    }
    a2[b2] = d2;
    return a2;
  }, {});
  return { path: a, pathname: b, params: d };
}
function aa(a, b, c) {
  var d = [], e = "^(" + a.replace(/^\/*/, "/").replace(/\/?\*?$/, "").replace(/[\\.*+^$?{}|()[\]]/g, "\\$&").replace(/:(\w+)/g, function(a2, b2) {
    d.push(b2);
    return "([^\\/]+)";
  }) + ")";
  a.endsWith("*") ? (a.endsWith("/*") && (e += "\\/?"), d.push("*"), e += "(.*)") : c && (e += "\\/?");
  c && (e += "$");
  return [new RegExp(e, b ? void 0 : "i"), d];
}
function J(a, b) {
  b === void 0 && (b = "/");
  var c = typeof a === "string" ? F(a) : a;
  a = c.pathname;
  var d = c.search;
  d = d === void 0 ? "" : d;
  c = c.hash;
  c = c === void 0 ? "" : c;
  return { pathname: a ? ba(a, a.startsWith("/") ? "/" : b) : b, search: d, hash: c };
}
function L(a) {
  return a.join("/").replace(/\/\/+/g, "/");
}
function ba(a, b) {
  var c = b.replace(/\/+$/, "").replace(/\/\/+/g, "/").split("/");
  a.replace(/\/\/+/g, "/").split("/").forEach(function(a2) {
    a2 === ".." ? 1 < c.length && c.pop() : a2 !== "." && c.push(a2);
  });
  return 1 < c.length ? L(c) : "/";
}
function generatePath(a, b) {
  b === void 0 && (b = {});
  return a.replace(/:(\w+)/g, function(a2, d) {
    b[d] == null ? true ? l(false, 'Missing ":' + d + '" param') : l(false) : void 0;
    return b[d];
  }).replace(/\/*\*$/, function() {
    return b["*"] == null ? "" : b["*"].replace(/^\/*/, "/");
  });
}
function useBlocker(a, b) {
  b === void 0 && (b = true);
  z2() ? void 0 : true ? l(false, "useBlocker() may be used only in the context of a <Router> component.") : l(false);
  var c = (0, import_react.useContext)(r).navigator;
  (0, import_react.useEffect)(function() {
    if (b) {
      var d = c.block(function(b2) {
        var c2 = f({}, b2, { retry: function() {
          d();
          b2.retry();
        } });
        a(c2);
      });
      return d;
    }
  }, [c, a, b]);
}
function useHref(a) {
  z2() ? void 0 : true ? l(false, "useHref() may be used only in the context of a <Router> component.") : l(false);
  var b = (0, import_react.useContext)(r).navigator;
  a = K(a);
  return b.createHref(a);
}
function useMatch(a) {
  z2() ? void 0 : true ? l(false, "useMatch() may be used only in the context of a <Router> component.") : l(false);
  var b = H();
  return Q(a, b.pathname);
}
function useParams() {
  return (0, import_react.useContext)(v).params;
}
function useRoutes(a, b) {
  b === void 0 && (b = "");
  z2() ? void 0 : true ? l(false, "useRoutes() may be used only in the context of a <Router> component.") : l(false);
  var c = (0, import_react.useMemo)(function() {
    return N(a);
  }, [a]);
  return G(c, b);
}

// node_modules/react-router-dom/index.js
var import_prop_types2 = __toModule(require_prop_types());
var import_react2 = __toModule(require_react());
function n() {
  n = Object.assign || function(a) {
    for (var d = 1; d < arguments.length; d++) {
      var b = arguments[d], c;
      for (c in b)
        Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
    }
    return a;
  };
  return n.apply(this, arguments);
}
function p2(a, d) {
  if (a == null)
    return {};
  var b = {}, c = Object.keys(a), e;
  for (e = 0; e < c.length; e++) {
    var f2 = c[e];
    0 <= d.indexOf(f2) || (b[f2] = a[f2]);
  }
  return b;
}
function q2(a, d) {
  if (a) {
    if (typeof a === "string")
      return r2(a, d);
    var b = Object.prototype.toString.call(a).slice(8, -1);
    b === "Object" && a.constructor && (b = a.constructor.name);
    if (b === "Map" || b === "Set")
      return Array.from(b);
    if (b === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(b))
      return r2(a, d);
  }
}
function r2(a, d) {
  if (d == null || d > a.length)
    d = a.length;
  for (var b = 0, c = Array(d); b < d; b++)
    c[b] = a[b];
  return c;
}
function t(a) {
  var d = 0;
  if (typeof Symbol === "undefined" || a[Symbol.iterator] == null) {
    if (Array.isArray(a) || (a = q2(a)))
      return function() {
        return d >= a.length ? { done: true } : { done: false, value: a[d++] };
      };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  d = a[Symbol.iterator]();
  return d.next.bind(d);
}
function v2(a, d) {
  if (!a) {
    typeof console !== "undefined" && console.warn(d);
    try {
      throw Error(d);
    } catch (b) {
    }
  }
}
function w2(a) {
  var d = a.children;
  a = a.window;
  var b = (0, import_react2.useRef)();
  b.current == null && (b.current = createBrowserHistory({ window: a }));
  var c = b.current;
  a = (0, import_react2.useReducer)(function(a2, b2) {
    return b2;
  }, { action: c.action, location: c.location });
  b = a[0];
  var e = a[1];
  (0, import_react2.useLayoutEffect)(function() {
    return c.listen(e);
  }, [c]);
  return (0, import_react2.createElement)(x2, { children: d, action: b.action, location: b.location, navigator: c });
}
w2.displayName = "BrowserRouter", w2.propTypes = { children: import_prop_types2.default.node, window: import_prop_types2.default.object };
function x3(a) {
  var d = a.children;
  a = a.window;
  var b = (0, import_react2.useRef)();
  b.current == null && (b.current = createHashHistory({ window: a }));
  var c = b.current;
  a = (0, import_react2.useReducer)(function(a2, b2) {
    return b2;
  }, { action: c.action, location: c.location });
  b = a[0];
  var e = a[1];
  (0, import_react2.useLayoutEffect)(function() {
    return c.listen(e);
  }, [c]);
  return (0, import_react2.createElement)(x2, { children: d, action: b.action, location: b.location, navigator: c });
}
x3.displayName = "HashRouter", x3.propTypes = { children: import_prop_types2.default.node, window: import_prop_types2.default.object };
var y3 = (0, import_react2.forwardRef)(function(a, d) {
  var b = a.onClick, c = a.replace, e = c === void 0 ? false : c, f2 = a.state, g = a.target, m3 = a.to;
  a = p2(a, ["onClick", "replace", "state", "target", "to"]);
  c = useHref(m3);
  var k2 = A2(), u = H(), h = K(m3);
  return (0, import_react2.createElement)("a", Object.assign({}, a, { href: c, onClick: function(a2) {
    b && b(a2);
    a2.defaultPrevented || a2.button !== 0 || g && g !== "_self" || a2.metaKey || a2.altKey || a2.ctrlKey || a2.shiftKey || (a2.preventDefault(), a2 = !!e || E(u) === E(h), k2(m3, { replace: a2, state: f2 }));
  }, ref: d, target: g }));
});
y3.displayName = "Link", y3.propTypes = { onClick: import_prop_types2.default.func, replace: import_prop_types2.default.bool, state: import_prop_types2.default.object, target: import_prop_types2.default.string, to: import_prop_types2.default.oneOfType([import_prop_types2.default.string, import_prop_types2.default.shape({ pathname: import_prop_types2.default.string, search: import_prop_types2.default.string, hash: import_prop_types2.default.string })]).isRequired };
var z3 = (0, import_react2.forwardRef)(function(a, d) {
  var b = a["aria-current"], c = b === void 0 ? "page" : b;
  b = a.activeClassName;
  var e = b === void 0 ? "active" : b;
  b = a.activeStyle;
  var f2 = a.caseSensitive, g = f2 === void 0 ? false : f2;
  f2 = a.className;
  var m3 = f2 === void 0 ? "" : f2;
  f2 = a.end;
  var k2 = f2 === void 0 ? false : f2, u = a.style;
  f2 = a.to;
  a = p2(a, "aria-current activeClassName activeStyle caseSensitive className end style to".split(" "));
  var h = H(), l2 = K(f2);
  h = h.pathname;
  l2 = l2.pathname;
  g || (h = h.toLowerCase(), l2 = l2.toLowerCase());
  c = (g = k2 ? h === l2 : h.startsWith(l2)) ? c : void 0;
  e = [m3, g ? e : null].filter(Boolean).join(" ");
  b = n({}, u, {}, g ? b : null);
  return (0, import_react2.createElement)(y3, Object.assign({}, a, { "aria-current": c, className: e, ref: d, style: b, to: f2 }));
});
z3.displayName = "NavLink", z3.propTypes = n({}, y3.propTypes, { "aria-current": import_prop_types2.default.oneOf("page step location date time true".split(" ")), activeClassName: import_prop_types2.default.string, activeStyle: import_prop_types2.default.object, className: import_prop_types2.default.string, style: import_prop_types2.default.object, to: import_prop_types2.default.oneOfType([import_prop_types2.default.string, import_prop_types2.default.shape({ pathname: import_prop_types2.default.string, search: import_prop_types2.default.string, hash: import_prop_types2.default.string })]).isRequired });
function A3(a) {
  B3(a.message, a.when);
  return null;
}
A3.displayName = "Prompt", A3.propTypes = { message: import_prop_types2.default.string, when: import_prop_types2.default.bool };
function B3(a, d) {
  d === void 0 && (d = true);
  var b = (0, import_react2.useCallback)(function(b2) {
    window.confirm(a) && b2.retry();
  }, [a]);
  useBlocker(b, d);
}
function C2(a) {
  a === void 0 && (a = "");
  return new URLSearchParams(typeof a === "string" || Array.isArray(a) || a instanceof URLSearchParams ? a : Object.keys(a).reduce(function(d, b) {
    var c = a[b];
    return d.concat(Array.isArray(c) ? c.map(function(a2) {
      return [b, a2];
    }) : [[b, c]]);
  }, []));
}
function useSearchParams(a) {
  true ? v2(typeof URLSearchParams !== "undefined", "You cannot use the `useSearchParams` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params\n\nIf you're unsure how to load polyfills, we recommend you check out https://polyfill.io/v3/ which provides some recommendations about how to load polyfills only for users that need them, instead of for every user.") : void 0;
  var d = (0, import_react2.useRef)(C2(a)), b = H();
  a = (0, import_react2.useMemo)(function() {
    function a2() {
      var a3 = k2.value;
      c2.has(a3) || d.current.getAll(a3).forEach(function(b2) {
        c2.append(a3, b2);
      });
    }
    for (var c2 = C2(b.search), e2 = t(d.current.keys()), k2; !(k2 = e2()).done; )
      a2();
    return c2;
  }, [b.search]);
  var c = A2(), e = (0, import_react2.useCallback)(function(a2, b2) {
    c("?" + C2(a2), b2);
  }, [c]);
  return [a, e];
}
export {
  w2 as BrowserRouter,
  x3 as HashRouter,
  y3 as Link,
  w as MemoryRouter,
  z3 as NavLink,
  y2 as Navigate,
  B2 as Outlet,
  A3 as Prompt,
  D2 as Route,
  x2 as Router,
  E2 as Routes,
  N as createRoutesFromArray,
  F2 as createRoutesFromChildren,
  C2 as createSearchParams,
  generatePath,
  Q as matchPath,
  M as matchRoutes,
  J as resolvePath,
  useBlocker,
  useHref,
  z2 as useInRouterContext,
  H as useLocation,
  useMatch,
  A2 as useNavigate,
  C as useOutlet,
  useParams,
  B3 as usePrompt,
  K as useResolvedPath,
  useRoutes,
  useSearchParams
};
//# sourceMappingURL=react-router-dom.js.map
