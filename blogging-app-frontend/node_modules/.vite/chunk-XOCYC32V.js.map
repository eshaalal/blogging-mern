{
  "version": 3,
  "sources": ["../proxy-compare/src/index.ts", "../valtio/esm/vanilla.js"],
  "sourcesContent": ["// symbols\nconst OWN_KEYS_SYMBOL = Symbol();\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst FROZEN_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// check if frozen\nconst isFrozen = (obj: object) => (\n  Object.isFrozen(obj) || (\n    // Object.isFrozen() doesn't detect non-writable properties\n    // See: https://github.com/dai-shi/proxy-compare/pull/8\n    Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n      (descriptor) => !descriptor.writable,\n    )\n  )\n);\n\n// copy frozen object\nconst unfreeze = (obj: object) => {\n  if (Array.isArray(obj)) {\n    // Arrays need a special way to copy\n    return Array.from(obj);\n  }\n  // For non-array objects, we create a new object keeping the prototype\n  // with changing all configurable options (otherwise, proxies will complain)\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n  return Object.create(getProto(obj), descriptors);\n};\n\ntype Affected = WeakMap<object, Set<string | symbol>>;\ntype ProxyCache<T extends object> = WeakMap<object, ProxyHandler<T>>;\ntype ProxyHandler<T extends object> = {\n  [FROZEN_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object>;\n  [AFFECTED_PROPERTY]?: Affected;\n  get(target: T, key: string | symbol): unknown;\n  has(target: T, key: string | symbol): boolean;\n  ownKeys(target: T): (string | symbol)[];\n  set?(target: T, key: string | symbol, value: unknown): boolean;\n  deleteProperty?(target: T, key: string | symbol): boolean;\n};\n\nconst createProxyHandler = <T extends object>(origObj: T, frozen: boolean) => {\n  let trackObject = false; // for trackMemo\n  const recordUsage = (h: ProxyHandler<T>, key: string | symbol) => {\n    if (!trackObject) {\n      let used = (h[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = new Set();\n        (h[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      used.add(key);\n    }\n  };\n  const recordObjectAsUsed = (h: ProxyHandler<T>) => {\n    trackObject = true;\n    (h[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    [FROZEN_PROPERTY]: frozen,\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(this, key);\n      return createProxy(\n        (target as any)[key],\n        (this[AFFECTED_PROPERTY] as Affected),\n        this[PROXY_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed(this);\n        return true;\n      }\n      // LIMITATION:\n      // We simply record the same as get.\n      // This means { a: {} } and { a: {} } is detected as changed,\n      // if 'a' in obj is handled.\n      recordUsage(this, key);\n      return key in target;\n    },\n    ownKeys(target) {\n      recordUsage(this, OWN_KEYS_SYMBOL);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (frozen) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return handler;\n};\n\n/**\n * Create a proxy.\n *\n * This function will create a proxy at top level and proxy nested objects as you access them,\n * in order to keep track of which properties were accessed via get/has proxy handlers:\n *\n * NOTE: Printing of WeakMap is hard to inspect and not very readable\n * for this purpose you can use the `affectedToPathList` helper.\n *\n * @param {object} obj - Object that will be wrapped on the proxy.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that will hold the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [proxyCache] -\n * WeakMap that will help keep referential identity for proxies.\n * @returns {Proxy<object>} - Object wrapped in a proxy.\n *\n * @example\n * import { createProxy } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n * const proxy = createProxy(original, affected);\n *\n * proxy.a // Will mark as used and track its value.\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"a\"\n *\n * proxy.d // Will mark \"d\" as accessed to track and proxy itself ({ e: \"3\" }).\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"d\"\n */\nexport const createProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  const origObj = (\n    obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj }\n  )[GET_ORIGINAL_SYMBOL]; // unwrap proxy\n  const target = origObj || obj;\n  const frozen = isFrozen(target);\n  let proxyHandler: ProxyHandler<typeof target> | undefined = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (!proxyHandler || proxyHandler[FROZEN_PROPERTY] !== frozen) {\n    proxyHandler = createProxyHandler<T extends object ? T : never>(target, frozen);\n    proxyHandler[PROXY_PROPERTY] = new Proxy(\n      frozen ? unfreeze(target) : target,\n      proxyHandler,\n    ) as typeof target;\n    if (proxyCache) {\n      proxyCache.set(target, proxyHandler);\n    }\n  }\n  proxyHandler[AFFECTED_PROPERTY] = affected as Affected;\n  proxyHandler[PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  return proxyHandler[PROXY_PROPERTY] as typeof target;\n};\n\nconst isOwnKeysChanged = (origObj: object, nextObj: object) => {\n  const origKeys = Reflect.ownKeys(origObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return origKeys.length !== nextKeys.length\n    || origKeys.some((k, i) => k !== nextKeys[i]);\n};\n\ntype ChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * Compare changes on objects.\n *\n * This will compare the affected properties on tracked objects inside the proxy\n * to check if there were any changes made to it,\n * by default if no property was accessed on the proxy it will attempt to do a\n * reference equality check for the objects provided (Object.is(a, b)). If you access a property\n * on the proxy, then isChanged will only compare the affected properties.\n *\n * @param {object} origObj - The original object to compare.\n * @param {object} nextObj - Object to compare with the original one.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that holds the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [cache] -\n * WeakMap that holds a cache of the comparisons for better performance with repetitive comparisons,\n * and to avoid infinite loop with circular structures.\n * @returns {boolean} - Boolean indicating if the affected property on the object has changed.\n *\n * @example\n * import { createProxy, isChanged } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.a\n *\n * isChanged(original, { a: \"1\" }, affected) // false\n *\n * proxy.a = \"2\"\n *\n * isChanged(original, { a: \"1\" }, affected) // true\n */\n\nexport const isChanged = (\n  origObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n): boolean => {\n  if (Object.is(origObj, nextObj)) {\n    return false;\n  }\n  if (!isObject(origObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(origObj);\n  if (!used) return true;\n  if (cache) {\n    const hit = (cache as ChangedCache).get(origObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as ChangedCache).set(origObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key of used) {\n    const c = key === OWN_KEYS_SYMBOL ? isOwnKeysChanged(origObj, nextObj)\n      : isChanged(\n        (origObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n      );\n    if (c === true || c === false) changed = c;\n    if (changed) break;\n  }\n  if (changed === null) changed = true;\n  if (cache) {\n    cache.set(origObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: changed,\n    });\n  }\n  return changed;\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n/**\n * Unwrap proxy to get the original object.\n *\n * Used to retrieve the original object used to create the proxy instance with `createProxy`.\n *\n * @param {Proxy<object>} obj -  The proxy wrapper of the originial object.\n * @returns {object | null} - Return either the unwrapped object if exists.\n *\n * @example\n * import { createProxy, getUntracked } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n * const originalFromProxy = getUntracked(proxy)\n *\n * Obejct.is(original, originalFromProxy) // true\n * isChanged(original, originalFromProxy, affected) // false\n */\nexport const getUntracked = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n/**\n * Mark object to be tracked.\n *\n * This function marks an object that will be passed into `createProxy`\n * as marked to track or not. By default only Array and Object are marked to track,\n * so this is useful for example to mark a class instance to track or to mark a object\n * to be untracked when creating your proxy.\n *\n * @param {object} obj - Object to mark as tracked or not.\n * @param {mark} boolean - Boolean indicating whether you want to track this object or not.\n * @returns {undefined} - No return.\n *\n * @example\n * import { createProxy, markToTrack, isChanged } from 'proxy-compare';\n *\n * const nested = { e: \"3\" }\n *\n * markToTrack(nested, false)\n *\n * const original = { a: \"1\", c: \"2\", d: nested };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.d.e\n *\n * isChanged(original, { d: { e: \"3\" } }, affected) // true\n */\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n// convert affected to path list\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n) => {\n  const list: (string | symbol)[][] = [];\n  const walk = (x: unknown, path?: (string | symbol)[]) => {\n    const used = (affected as Affected).get(x as object);\n    if (used) {\n      used.forEach((key) => {\n        walk((x as any)[key], path ? [...path, key] : [key]);\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n", "import { getUntracked, markToTrack } from 'proxy-compare';\n\nconst VERSION = Symbol();\nconst LISTENERS = Symbol();\nconst SNAPSHOT = Symbol();\nconst PROMISE_RESULT = Symbol();\nconst PROMISE_ERROR = Symbol();\nconst refSet = new WeakSet();\nconst ref = (o) => {\n  refSet.add(o);\n  return o;\n};\nconst isSupportedObject = (x) => typeof x === \"object\" && x !== null && (Array.isArray(x) || !x[Symbol.iterator]) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer);\nconst proxyCache = new WeakMap();\nlet globalVersion = 1;\nconst snapshotCache = new WeakMap();\nconst proxy = (initialObject = {}) => {\n  if (!isSupportedObject(initialObject)) {\n    throw new Error(\"unsupported object type\");\n  }\n  const found = proxyCache.get(initialObject);\n  if (found) {\n    return found;\n  }\n  let version = globalVersion;\n  const listeners = new Set();\n  const notifyUpdate = (op, nextVersion) => {\n    if (!nextVersion) {\n      nextVersion = ++globalVersion;\n    }\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(op, nextVersion));\n    }\n  };\n  const propListeners = new Map();\n  const getPropListener = (prop) => {\n    let propListener = propListeners.get(prop);\n    if (!propListener) {\n      propListener = (op, nextVersion) => {\n        const newOp = [...op];\n        newOp[1] = [prop, ...newOp[1]];\n        notifyUpdate(newOp, nextVersion);\n      };\n      propListeners.set(prop, propListener);\n    }\n    return propListener;\n  };\n  const popPropListener = (prop) => {\n    const propListener = propListeners.get(prop);\n    propListeners.delete(prop);\n    return propListener;\n  };\n  const createSnapshot = (target, receiver) => {\n    const cache = snapshotCache.get(receiver);\n    if ((cache == null ? void 0 : cache[0]) === version) {\n      return cache[1];\n    }\n    const snapshot2 = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n    markToTrack(snapshot2, true);\n    snapshotCache.set(receiver, [version, snapshot2]);\n    Reflect.ownKeys(target).forEach((key) => {\n      const value = target[key];\n      if (refSet.has(value)) {\n        markToTrack(value, false);\n        snapshot2[key] = value;\n      } else if (!isSupportedObject(value)) {\n        snapshot2[key] = value;\n      } else if (value instanceof Promise) {\n        if (PROMISE_RESULT in value) {\n          snapshot2[key] = value[PROMISE_RESULT];\n        } else {\n          const errorOrPromise = value[PROMISE_ERROR] || value;\n          Object.defineProperty(snapshot2, key, {\n            get() {\n              throw errorOrPromise;\n            }\n          });\n        }\n      } else if (value[VERSION]) {\n        snapshot2[key] = value[SNAPSHOT];\n      } else {\n        snapshot2[key] = value;\n      }\n    });\n    Object.freeze(snapshot2);\n    return snapshot2;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const proxyObject = new Proxy(baseObject, {\n    get(target, prop, receiver) {\n      if (prop === VERSION) {\n        return version;\n      }\n      if (prop === LISTENERS) {\n        return listeners;\n      }\n      if (prop === SNAPSHOT) {\n        return createSnapshot(target, receiver);\n      }\n      return target[prop];\n    },\n    deleteProperty(target, prop) {\n      const prevValue = target[prop];\n      const childListeners = prevValue == null ? void 0 : prevValue[LISTENERS];\n      if (childListeners) {\n        childListeners.delete(popPropListener(prop));\n      }\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate([\"delete\", [prop], prevValue]);\n      }\n      return deleted;\n    },\n    set(target, prop, value) {\n      var _a;\n      const prevValue = target[prop];\n      if (Object.is(prevValue, value)) {\n        return true;\n      }\n      const childListeners = prevValue == null ? void 0 : prevValue[LISTENERS];\n      if (childListeners) {\n        childListeners.delete(popPropListener(prop));\n      }\n      if (refSet.has(value) || !isSupportedObject(value) || ((_a = Object.getOwnPropertyDescriptor(target, prop)) == null ? void 0 : _a.set)) {\n        target[prop] = value;\n      } else if (value instanceof Promise) {\n        target[prop] = value.then((v) => {\n          target[prop][PROMISE_RESULT] = v;\n          notifyUpdate([\"resolve\", [prop], v]);\n          return v;\n        }).catch((e) => {\n          target[prop][PROMISE_ERROR] = e;\n          notifyUpdate([\"reject\", [prop], e]);\n        });\n      } else {\n        value = getUntracked(value) || value;\n        if (value[LISTENERS]) {\n          target[prop] = value;\n        } else {\n          target[prop] = proxy(value);\n        }\n        target[prop][LISTENERS].add(getPropListener(prop));\n      }\n      notifyUpdate([\"set\", [prop], value, prevValue]);\n      return true;\n    }\n  });\n  proxyCache.set(initialObject, proxyObject);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(initialObject, key);\n    if (desc.get || desc.set) {\n      Object.defineProperty(baseObject, key, desc);\n    } else {\n      proxyObject[key] = initialObject[key];\n    }\n  });\n  return proxyObject;\n};\nconst getVersion = (proxyObject) => {\n  if (typeof process === \"object\" && process.env.NODE_ENV !== \"production\" && !(proxyObject == null ? void 0 : proxyObject[VERSION])) {\n    throw new Error(\"Please use proxy object\");\n  }\n  return proxyObject[VERSION];\n};\nconst subscribe = (proxyObject, callback, notifyInSync) => {\n  if (typeof process === \"object\" && process.env.NODE_ENV !== \"production\" && !(proxyObject == null ? void 0 : proxyObject[LISTENERS])) {\n    throw new Error(\"Please use proxy object\");\n  }\n  let pendingVersion = 0;\n  const ops = [];\n  const listener = (op, nextVersion) => {\n    ops.push(op);\n    if (notifyInSync) {\n      callback(ops.splice(0));\n      return;\n    }\n    pendingVersion = nextVersion;\n    Promise.resolve().then(() => {\n      if (nextVersion === pendingVersion) {\n        callback(ops.splice(0));\n      }\n    });\n  };\n  proxyObject[LISTENERS].add(listener);\n  return () => {\n    proxyObject[LISTENERS].delete(listener);\n  };\n};\nconst snapshot = (proxyObject) => {\n  if (typeof process === \"object\" && process.env.NODE_ENV !== \"production\" && !(proxyObject == null ? void 0 : proxyObject[SNAPSHOT])) {\n    throw new Error(\"Please use proxy object\");\n  }\n  return proxyObject[SNAPSHOT];\n};\n\nexport { getVersion, proxy, ref, snapshot, subscribe };\n"],
  "mappings": "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",
  "names": []
}
